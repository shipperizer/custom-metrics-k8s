apiVersion: skaffold/v2beta9
kind: Config
deploy:
  kubectl:
    manifests:
      - "sample-app/*.yaml"


profiles:
- name: deps
  deploy:
    kubectl:
      manifests:
        - "metrics-server.yaml"
    helm:
      releases:
        - name: "prometheus"
          chartPath: "prometheus-community/prometheus"
          remote: true
          upgradeOnChange: true
          setValues:
            alertmanager.enabled: false
            pushgateway.enabled: false
        - name: "prometheus-adapter"
          chartPath: "prometheus-community/prometheus-adapter"
          remote: true
          upgradeOnChange: true
          setValues:
            logLevel: 6
            prometheus.url: http://prometheus-server.default.svc.cluster.local
            prometheus.port: 80
            prometheus.path: ""
            metricsRelistInterval: 1m
            rules.default: false
            rules.custom[0].seriesQuery: 'http_requests_total{kubernetes_namespace!=""\,kubernetes_pod_name!=""}'
            rules.custom[0].metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)'
            rules.custom[0].resources.overrides.kubernetes_namespace.resource: "namespace"
            rules.custom[0].resources.overrides.kubernetes_pod_name.resource: "pod"
            rules.custom[0].name.matches: "^(.*)_total"
            rules.custom[0].name.as: "${1}_per_second"
            rules.custom[1].seriesQuery: http_requests_total{kubernetes_pod_name=""}
            rules.custom[1].metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)'
            rules.custom[1].resources.overrides.kubernetes_namespace.resource: "namespace"
            rules.custom[1].resources.overrides.kubernetes_name.resource: "deployment"
            rules.custom[1].resources.overrides.kubernetes_name.group: "apps"
